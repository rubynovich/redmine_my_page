- status_id = IssueStatus.default.try(:id)
- issues = Issue.visible.open.where(:assigned_to_id => User.current.id, :status_id => status_id)

%h3
  = l(:label_new_issue_plural)
  = "(#{issues.count})"

- new_issues = issues.limit(10).includes(:status, :project, :tracker, :priority).order("#{IssuePriority.table_name}.position DESC, #{Issue.table_name}.updated_on DESC").all

= render :partial => 'list_simple', :locals => { :issues => new_issues, :allows => [:author] }

%p.small
  = link_to l(:label_issue_view_all), :controller => 'issues', :action => 'index', :set_filter => 1, :assigned_to_id => 'me', :status_id => status_id, :sort => 'priority:desc,updated_on:desc'

- content_for :header_tags do
  = auto_discovery_link_tag(:atom, {:controller => 'issues', :action => 'index', :set_filter => 1, :assigned_to_id => 'me', :status_id => status_id, :format => 'atom', :key => User.current.rss_key}, {:title => l(:label_solved_issues)})
